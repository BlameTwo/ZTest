<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:convert="clr-namespace:SimpleUI.Styles.Converter"
    xmlns:ui="clr-namespace:SimpleUI.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/SimpleUI;component/Styles/Sources/Thickess.xaml" />
        <ResourceDictionary Source="pack://application:,,,/SimpleUI;component/Styles/Sources/CornerRadius.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="BaseExpander" TargetType="{x:Type ui:Expander}">
        <Setter Property="CornerRadius" Value="0.3" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultAppFillBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:Expander}">
                    <Border
                        x:Name="border"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MaxHeight="{TemplateBinding MaxHeight}"
                        Margin="{TemplateBinding Margin}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ContentControl
                                Grid.Row="0"
                                Grid.Column="1"
                                Margin="0,5,30,5"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Panel.ZIndex="2"
                                Content="{TemplateBinding RightHeaderContent}" />
                            <ui:ToggleButton
                                Grid.Row="0"
                                Grid.ColumnSpan="2"
                                Padding="5"
                                Panel.ZIndex="1"
                                BorderThickness="1"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Cursor="Hand"
                                FocusVisualStyle="{x:Null}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Template="{DynamicResource ResourceKey=ExpanderUIToggleButton}">
                                <Grid HorizontalAlignment="Left">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ui:FontIcon
                                        Margin="5,0,5,0"
                                        VerticalAlignment="Center"
                                        HorizontalContentAlignment="Left"
                                        FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
                                        FontSize="20"
                                        Foreground="{TemplateBinding Foreground}"
                                        Glyph="{TemplateBinding Icon,
                                                                Converter={x:Static convert:IconConverter.Instance}}" />
                                    <TextBlock
                                        Grid.Column="1"
                                        Margin="5"
                                        VerticalAlignment="Center"
                                        FontSize="15"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Header}" />
                                </Grid>
                            </ui:ToggleButton>
                            <Grid
                                x:Name="grid1"
                                Grid.Row="2"
                                Grid.ColumnSpan="2"
                                Background="Transparent">
                                <Grid.LayoutTransform>
                                    <ScaleTransform ScaleY="0" />
                                </Grid.LayoutTransform>
                                <Border
                                    x:Name="ContentBorder"
                                    Panel.ZIndex="0"
                                    Background="{DynamicResource DefaultAppBackgroundBrush}"
                                    BorderBrush="{DynamicResource Default.Control.Border.Brush}"
                                    BorderThickness="{DynamicResource Expander.Content.Thickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Opacity="0"
                                    RenderTransformOrigin="0.5,0.5" />
                                <!--  卡片内容  -->
                                <ContentPresenter
                                    x:Name="ContentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="grid1"
                                            Storyboard.TargetProperty="(Border.LayoutTransform).(ScaleTransform.ScaleY)"
                                            From="0.0"
                                            To="1.0"
                                            Duration="00:00:00.137">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentBorder"
                                            Storyboard.TargetProperty="(Border.Opacity)"
                                            From="0.0"
                                            To="1.0"
                                            Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="grid1"
                                            Storyboard.TargetProperty="(Border.LayoutTransform).(ScaleTransform.ScaleY)"
                                            From="1.0"
                                            To="0"
                                            Duration="00:00:00.137">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentBorder"
                                            Storyboard.TargetProperty="(Border.Opacity)"
                                            From="1.0"
                                            To="0.0"
                                            Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ExpanderUIToggleButton" TargetType="{x:Type ui:ToggleButton}">

        <Grid Margin="{TemplateBinding Margin}">
            <Border
                x:Name="border"
                Background="{DynamicResource DefaultAppBackgroundBrush}"
                BorderBrush="{DynamicResource Default.Control.Border.Brush}"
                BorderThickness="{DynamicResource ButtonBase.Thickness}"
                CornerRadius="{TemplateBinding CornerRadius}" />
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="ContentPresenter"
                    Grid.Column="0"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding Content}"
                    SnapsToDevicePixels="True" />
                <Path
                    x:Name="path"
                    Grid.Column="1"
                    Width="10"
                    Height="10"
                    Margin="5"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Data="M878.592 250.88q29.696 0 48.128 11.264t24.576 29.696 0 41.472-26.624 45.568q-82.944 92.16-159.744 180.224t-148.48 164.864q-19.456 20.48-45.568 31.744t-53.76 11.776-53.248-8.704-43.008-28.672q-39.936-44.032-82.944-90.112l-88.064-92.16q-43.008-46.08-85.504-90.624t-79.36-86.528q-17.408-19.456-22.528-40.448t1.024-38.4 23.552-28.672 45.056-11.264q35.84 0 98.816-0.512t137.728-0.512l153.6 0 150.528 0 125.952 0 79.872 0z"
                    Fill="{TemplateBinding Foreground}"
                    FocusVisualStyle="{x:Null}"
                    RenderTransformOrigin="0.5, 0.5"
                    Stretch="Uniform">
                    <Path.RenderTransform>
                        <RotateTransform Angle="0" />
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="path"
                                Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                To="180"
                                Duration="00:00:00.167" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="path"
                                Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                To="0"
                                Duration="00:00:00.167" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity">
                            <DoubleAnimation To="0.2" Duration="00:00:00.137">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity">
                            <DoubleAnimation To="0.8" Duration="00:00:00.137">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>