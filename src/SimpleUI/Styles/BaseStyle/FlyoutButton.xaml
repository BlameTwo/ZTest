<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:convert="clr-namespace:SimpleUI.Styles.Converter"
    xmlns:ui="clr-namespace:SimpleUI.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/SimpleUI;component/Styles/Sources/Thickess.xaml" />
        <ResourceDictionary Source="pack://application:,,,/SimpleUI;component/Styles/Sources/CornerRadius.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="BaseFlyoutButtonStyle" TargetType="{x:Type ui:FlyoutButton}">
        <!--  在这里设定外部的样式，以保证扩展性  -->
        <Setter Property="Background" Value="{DynamicResource Default.Control.Background.Brush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Default.Control.Border.Brush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ButtonBase.Thickness}" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultAppFillBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!--  内边距为5  -->
        <Setter Property="Padding" Value="0" />
        <!--  圆角使用统一设定  -->
        <Setter Property="CornerRadius" Value="{DynamicResource DefaultCornerRadius}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:FlyoutButton}">
                    <Border Margin="{TemplateBinding Margin}" RenderOptions.EdgeMode="Unspecified">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <Border
                                x:Name="backborder"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Opacity="1"
                                TextOptions.TextFormattingMode="Display" />
                            <Grid
                                Margin="8"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ui:FontIcon FocusVisualStyle="{TemplateBinding FocusVisualStyle}" Glyph="{TemplateBinding Icon, Converter={x:Static convert:IconConverter.Instance}}" />
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="5,0,0,0"
                                    FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
                                    SnapsToDevicePixels="True"
                                    TextOptions.TextFormattingMode="Display" />
                            </Grid>
                            <Popup
                                x:Name="Popup"
                                Margin="5"
                                AllowsTransparency="True"
                                IsOpen="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="{TemplateBinding Placement}"
                                PopupAnimation="Fade"
                                StaysOpen="False">
                                <Border
                                    Padding="15"
                                    Background="{DynamicResource Default.ToolTip.Background.Brush}"
                                    BorderBrush="{DynamicResource Default.Control.Border.Brush}"
                                    BorderThickness="1"
                                    CornerRadius="5">
                                    <ContentPresenter Content="{TemplateBinding DropContent}" />
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="backborder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.65"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="backborder"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="backborder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.3"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="backborder"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Default.Control.Background.Brush}" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource Control.EnableFalse.Brush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Default.Control.Border.Brush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>