<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="BaseContextMenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Popup.PopupAnimation" Value="None" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultAppFillBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid x:Name="Grid">
                        <Grid.RenderTransform>
                            <TranslateTransform />
                        </Grid.RenderTransform>
                        <Border Background="{DynamicResource Default.ContextMenu.Background.Brush}" CornerRadius="5" />
                        <Border
                            Name="Border"
                            BorderBrush="{DynamicResource Default.Control.Border.Brush}"
                            BorderThickness="1"
                            CornerRadius="5">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="3" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="5" />
                        </Trigger>
                        <Trigger Property="IsOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Grid"
                                            Storyboard.TargetProperty="(Grid.RenderTransform).(TranslateTransform.Y)"
                                            From="-90"
                                            To="0"
                                            Duration="00:00:00.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!--  自定义菜单项之间的分隔符的样式  -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{DynamicResource Default.ContextMenu.BorderBrush.Brush}" BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TopLevelHeader  -->
    <ControlTemplate x:Key="MenuItemStyle1" TargetType="{x:Type MenuItem}">
        <Border Name="Border" CornerRadius="5">
            <Grid>
                <ContentPresenter
                    Margin="10"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <Popup
                    Name="Popup"
                    Margin="5,0,0,0"
                    AllowsTransparency="True"
                    Focusable="False"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Right"
                    PopupAnimation="None">
                    <Grid>
                        <Border
                            Background="{DynamicResource Card.Background.Color}"
                            CornerRadius="5"
                            Opacity="0.2" />
                        <Border
                            Name="SubmenuBorder"
                            Background="{DynamicResource Card.Background.Brush}"
                            BorderThickness="1"
                            CornerRadius="5"
                            SnapsToDevicePixels="True">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>


            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="Gray" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Setter x:Key="HighBrush" Property="Border.BorderBrush">
        <Setter.Value>
            <SolidColorBrush Color="{DynamicResource Default.Dialog.BorderBrush.Brush}" />
        </Setter.Value>
    </Setter>


    <!--  TopLevelItem  -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border
            Name="_Border"
            Padding="5"
            CornerRadius="5">
            <Grid>
                <ContentControl Content="{TemplateBinding Header}" Foreground="{DynamicResource DefaultAppFillBrush}" />
            </Grid>
        </Border>

    </ControlTemplate>

    <!--  SubmenuItem 自定义菜单项的外观样式  -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">

        <Grid>
            <Border
                Name="border"
                Margin="3"
                Background="{DynamicResource Default.Accent.Brush}"
                CornerRadius="5"
                Opacity="0" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentControl
                    Name="Icon"
                    Margin="10,5,5,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Icon}"
                    FontFamily="Segoe Fluent Icons" />
                <Grid>
                    <Border
                        Name="Check"
                        Width="13"
                        Height="13"
                        Margin="6,5,6,5"
                        Background="{DynamicResource Default.Control.Border.Brush}"
                        CornerRadius="5"
                        Visibility="Hidden">
                        <Path
                            Name="CheckMark"
                            Width="7"
                            Height="7"
                            Data="M 0 0 L 7 7 M 0 7 L 7 0"
                            SnapsToDevicePixels="False"
                            Stroke="{DynamicResource DefaultAppFillBrush}"
                            StrokeThickness="1"
                            Visibility="Visible" />
                    </Border>
                </Grid>
                <ContentPresenter
                    Name="HeaderHost"
                    Grid.Column="1"
                    Margin="5"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    Margin="0,5,5,5"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    DockPanel.Dock="Right"
                    Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Hidden" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <!--  选中菜单项时的高亮颜色的trigger设置  -->
            <Trigger Property="IsHighlighted" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="border"
                                Storyboard.TargetProperty="Opacity"
                                From="0"
                                To="1"
                                Duration="0:0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="border"
                                Storyboard.TargetProperty="Opacity"
                                From="1"
                                To="0"
                                Duration="0:0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="gray" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  SubmenuHeader  -->

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" CornerRadius="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentControl
                    Name="Icon"
                    Margin="6,0,6,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Icon}"
                    FontFamily="Segoe Fluent Icons" />
                <ContentPresenter
                    Name="HeaderHost"
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    Margin="3"
                    DockPanel.Dock="Right"
                    Text="{TemplateBinding InputGestureText}" />
                <Path
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 0 7 L 4 3.5 Z"
                    Fill="{DynamicResource DefaultAppFillBrush}" />
                <Popup
                    Name="Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    HorizontalOffset="-4"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Left"
                    PopupAnimation="None">
                    <Border
                        Name="SubmenuBorder"
                        Background="{DynamicResource Default.ContextMenu.Background.Brush}"
                        BorderBrush="{DynamicResource Default.Control.Border.Brush}"
                        BorderThickness="1"
                        SnapsToDevicePixels="True"
                        TextBlock.Foreground="{DynamicResource DefaultAppFillBrush}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Default.Accent.Brush}" />
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4" />
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="gray" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  MenuItem Style  -->

    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />

        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>