<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:convert="clr-namespace:SimpleUI.Styles.Converter"
    xmlns:ui="clr-namespace:SimpleUI.Controls">
    <Style x:Key="UIButtonCyberpunkBase" TargetType="{x:Type ui:Button}">
        <!--  在这里设定外部的样式，以保证扩展性  -->
        <Setter Property="Background" Value="{DynamicResource Default.Control.Background.Brush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Default.Control.Border.Brush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultAppFillBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!--  内边距为5  -->
        <Setter Property="Padding" Value="0" />
        <!--  圆角使用统一设定  -->
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ui:Button}">
                    <Border Margin="{TemplateBinding Margin}" RenderOptions.EdgeMode="Unspecified">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <!--  这里圆角继承在Base之下的ButtonBase  -->
                            <Border
                                x:Name="backborder"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Opacity="1"
                                TextOptions.TextFormattingMode="Display" />
                            <Grid
                                Margin="8"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ui:FontIcon FocusVisualStyle="{TemplateBinding FocusVisualStyle}" Glyph="{TemplateBinding Icon, Converter={x:Static convert:IconConverter.Instance}}" />
                                <ContentPresenter
                                    Grid.Column="1"
                                    Margin="5,0,0,0"
                                    FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
                                    SnapsToDevicePixels="True"
                                    TextOptions.TextFormattingMode="Display"
                                    Visibility="{TemplateBinding ContentVisiblity}" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource Default.Accent.Brush}" />
                            <Setter Property="Foreground" Value="{DynamicResource Default.Accent.Brush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="backborder" Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>